//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        Ebter {
            bindings = <&kp ENTER>;
            key-positions = <16 17 18>;
            timeout-ms = <50>;
        };

        backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <6 7 8>;
            timeout-ms = <60>;
        };

        Delet {
            bindings = <&kp DELETE>;
            key-positions = <27 28 29>;
        };

        space {
            bindings = <&kp SPACE>;
            key-positions = <11 12 13>;
        };

        escape {
            bindings = <&kp ESCAPE>;
            key-positions = <1 2 3>;
        };

        R_shift {
            bindings = <&kp RIGHT_SHIFT>;
            key-positions = <26 27>;
        };

        L_shift {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <24 25>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        LETRAS {
            bindings = <
       &kp Q  &kp W  &kp E  &kp R  &kp T    &kp Y          &kp U          &kp I              &kp O    &kp P
       &kp A  &kp S  &kp D  &kp F  &kp G    &kp H          &kp J          &kp K              &kp L    &kp SEMI
&sl 1  &kp Z  &kp X  &kp C  &kp V  &kp B    &kp N          &kp M          &kp COMMA          &kp DOT  &kp FSLH  &kp SINGLE_QUOTE
                     &mo 3  &mo 2  &mo 1    &kp RIGHT_ALT  &kp RIGHT_WIN  &kp RIGHT_CONTROL
            >;
        };

        NUMEROS {
            bindings = <
               &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3    &kp NUMBER_4  &kp N5    &kp NUMBER_6  &kp N7  &kp N8  &kp N9  &kp N0
               &kp GRAVE     &kp LEFT      &kp UP_ARROW    &kp RIGHT     &trans    &trans        &trans  &trans  &trans  &trans
&kp BACKSPACE  &trans        &trans        &kp DOWN_ARROW  &trans        &trans    &trans        &trans  &trans  &trans  &trans  &kp MINUS
                                           &trans          &trans        &trans    &trans        &trans  &trans
            >;
        };

        SIMBOLOS {
            bindings = <
           &trans  &trans  &kp RA(TAB)  &trans  &trans    &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp BACKSLASH  &trans  &trans
           &trans  &trans  &trans       &trans  &trans    &trans            &trans             &trans         &trans  &trans
&kp SPACE  &trans  &trans  &trans       &trans  &trans    &trans            &trans             &trans         &trans  &trans  &trans
                           &trans       &trans  &trans    &kp SPACE         &trans             &trans
            >;
        };

        F_Keys {
            bindings = <
        &kp F1   &kp F2   &kp F3  &kp F4  &kp F5    &kp F6              &kp F7           &kp F8         &kp F9  &kp F10
        &kp F11  &kp F12  &trans  &trans  &trans    &kp K_CONTEXT_MENU  &kp PRINTSCREEN  &kp PAGE_UP    &trans  &trans
&trans  &trans   &trans   &trans  &trans  &trans    &trans              &trans           &kp PAGE_DOWN  &trans  &trans   &trans
                          &trans  &trans  &trans    &trans              &trans           &trans
            >;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};

//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        Ebter {
            bindings = <&kp ENTER>;
            key-positions = <16 17 18>;
            timeout-ms = <50>;
        };

        backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <6 7 8>;
            timeout-ms = <60>;
        };

        Delet {
            bindings = <&kp DELETE>;
            key-positions = <27 28 29>;
        };

        space {
            bindings = <&kp SPACE>;
            key-positions = <11 12 13>;
        };

        escape {
            bindings = <&kp ESCAPE>;
            key-positions = <1 2 3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        LETRAS {
            bindings = <
       &kp Q  &kp W  &kp E     &kp R  &kp T    &kp Y  &kp U              &kp I          &kp O    &kp P
       &kp A  &kp S  &kp D     &kp F  &kp G    &kp H  &kp J              &kp K          &kp L    &kp SEMI
&sl 1  &kp Z  &kp X  &kp C     &kp V  &kp B    &kp N  &kp M              &kp COMMA      &kp DOT  &kp FSLH  &sl 2
                     &kp LGUI  &mo 2  &mo 1    &sl 2  &kp RIGHT_CONTROL  &kp RIGHT_ALT
            >;
        };

        NUMEROS {
            bindings = <
               &kp LA(BACKSPACE)   &trans        &kp UP     &trans         &kp LA(DELETE)        &kp N5      &kp N6           &kp N7       &kp N8    &kp N9
               &kp LA(LEFT_ARROW)  &kp LEFT      &kp DOWN   &kp RIGHT      &kp LA(RIGHT)         &kp N0      &kp N1           &kp N2       &kp N3    &kp N4
&kp BACKSPACE  &kp LG(UP_ARROW)    &kp LG(LEFT)  &kp ENTER  &kp LG(RIGHT)  &kp LG(DOWN_ARROW)    &kp PERIOD  &kp PLUS         &kp MINUS    &kp STAR  &kp FSLH  &kp CARET
                                                 &trans     &trans         &trans                &kp EQUAL   &kp RIGHT_SHIFT  &kp PERCENT
            >;
        };

        sym_func {
            bindings = <
           &kp ESC        &kp LEFT_BRACE        &kp RIGHT_BRACE        &none             &none             &kp F1     &kp F2           &kp F3   &kp F4   &kp F5
           &kp LA(TAB)    &kp LBKT              &kp RBKT               &kp ENTER         &kp BSLH          &kp F6     &kp F7           &kp F8   &kp F9   &kp F10
&kp GRAVE  &kp LESS_THAN  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp GREATER_THAN  &kp UNDERSCORE    &kp F11    &kp F12          &kp F13  &kp F14  &kp F15  &kp APOSTROPHE
                                                &trans                 &trans            &trans            &kp SPACE  &kp RIGHT_SHIFT  &none
            >;
        };

        device {
            bindings = <
       &none       &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &none             &none    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
       &kp K_MUTE  &kp C_VOLUME_DOWN     &kp C_VOLUME_UP       &kp C_PLAY_PAUSE  &none    &none         &none         &none         &none         &none
&none  &none       &none                 &none                 &none             &none    &none         &none         &none         &none         &none         &bt BT_CLR
                                         &none                 &none             &none    &none         &none         &none
            >;
        };

        Simbolos {
            bindings = <
        &kp ESCAPE  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
        &trans      &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans      &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                            &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        device {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
